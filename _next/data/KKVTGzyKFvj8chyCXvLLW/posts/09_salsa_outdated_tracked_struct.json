{"pageProps":{"postData":{"id":"09_salsa_outdated_tracked_struct","contentHtml":"<p>来来回回讨论了两周，终于把这个 <a href=\"https://github.com/salsa-rs/salsa/pull/413\">PR</a>\n合进去了，这是我参与开源项目以来，第一次讨论这么多。通过这个 PR，确实有很多思考，对Salsa 也有了更深入的思考，值得把它们记录下来</p>\n<p>Issue: <a href=\"https://github.com/salsa-rs/salsa/issues/407\">https://github.com/salsa-rs/salsa/issues/407</a></p>\n<p>PR: <a href=\"https://github.com/salsa-rs/salsa/pull/413\">https://github.com/salsa-rs/salsa/pull/413</a></p>\n<h2>问题</h2>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-meta\">#[salsa::tracked]</span>\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">tracked_fn</span>(db: &#x26;Db, input: MyInput) <span class=\"hljs-punctuation\">-></span> MyTracked {\n    MyTracked::<span class=\"hljs-title function_ invoke__\">new</span>(db, input.<span class=\"hljs-title function_ invoke__\">field</span>(db) * <span class=\"hljs-number\">2</span>)\n}\n\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">main</span>() {\n    ...\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">input</span> = MyInput::<span class=\"hljs-title function_ invoke__\">new</span>(&#x26;db, <span class=\"hljs-number\">11</span>);\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">tracked</span> = <span class=\"hljs-title function_ invoke__\">tracked_fn</span>(&#x26;db, input);\n\n    input.<span class=\"hljs-title function_ invoke__\">set_field</span>(&#x26;<span class=\"hljs-keyword\">mut</span> db).<span class=\"hljs-title function_ invoke__\">to</span>(<span class=\"hljs-number\">12</span>);\n    dbg!(tracked.<span class=\"hljs-title function_ invoke__\">field</span>(&#x26;db));\n}\n</code></pre>\n<p>修改了 <code>input</code>，<code>tracked</code> 还有效吗？对于上面这段代码，希望在调用\n<code>tracked.field(&#x26;db)</code> 时 panic。而我们现在的代码，也就是这个 PR 之前，并不会\npanic，会返回上次保存的旧值 22。</p>\n<h2>Panic if outdated</h2>\n<p>对于 tracked struct 的 fields，一旦发现它 outdated，就应该 panic。如果保存的旧值的 <code>verified_at</code> 小于 <code>runtime.current_revision</code>，我们就说这个旧值 outdated。看看我们上面这个例子，改变 input 的时候，<code>runtime.current_revision</code> 就会 +1，大于\n<code>tracked.field(&#x26;db)</code> 查询到的值的 <code>verified_at</code>，所以应该 panic。（reference:\n<a href=\"https://github.com/salsa-rs/salsa/issues/407#issuecomment-1244550905\">https://github.com/salsa-rs/salsa/issues/407#issuecomment-1244550905</a>）</p>\n<p>看起来合理，但这样改之后，之前的测试有的通不过了。</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-meta\">#[salsa::tracked]</span>\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">tracked_fn</span>(db: &#x26;Db, input: MyInput) <span class=\"hljs-punctuation\">-></span> <span class=\"hljs-type\">u32</span> {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">tracked</span> = MyTracked::<span class=\"hljs-title function_ invoke__\">new</span>(db, input.<span class=\"hljs-title function_ invoke__\">field</span>(db) * <span class=\"hljs-number\">2</span>);\n    tracked.<span class=\"hljs-title function_ invoke__\">field</span>(db)\n}\n\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">main</span>() {\n    ...\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">input</span> = MyInput::<span class=\"hljs-title function_ invoke__\">new</span>(&#x26;db, <span class=\"hljs-number\">11</span>);\n    _ = <span class=\"hljs-title function_ invoke__\">tracked_fn</span>(&#x26;db, input);\n\n    <span class=\"hljs-comment\">// A \"synthetic write\" causes the system to act *as though* some</span>\n    <span class=\"hljs-comment\">// input of durability `durability` has changed. This is mostly</span>\n    <span class=\"hljs-comment\">// useful for profiling scenarios.</span>\n    db.<span class=\"hljs-title function_ invoke__\">synthetic_write</span>(salsa::Durabiliby::High);\n    _ = <span class=\"hljs-title function_ invoke__\">tracked_fn</span>(&#x26;db, input); <span class=\"hljs-comment\">// panic</span>\n}\n</code></pre>\n<p>第二次调用 <code>tracked_fn</code> 会 panic，但这段代码在 salsa 中绝对应该是合理的。第二次调用 <code>tracked_fn(&#x26;db, input)</code>，我们发现 db 中保存有之前的计算结果，但它可能是过时的，因为它对应的 <code>verified_at</code> 小于 <code>current_revision</code>。这时，我们需要 <a href=\"https://github.com/salsa-rs/salsa/blob/2ffe4a78a824acb8c73e77497e4c2c469fcbed37/components/salsa-2022/src/function/maybe_changed_after.rs#L145\">deep\nverify</a>，检查这个 query 的所有 dependency 在 <code>verified_at</code> 之后有没有改变。（我们在 <a href=\"./07_salsa_dependency.md\">这篇文章</a> 讨论过 query 的 dependency）。对于\n<code>tracked_fn(&#x26;db, input)</code> 来说，一个 dependency 就是 <code>tracked.field(db)</code>，显然它的 <code>verified_at</code> 小于 <code>current_revision</code>，前面已经提到</p>\n<blockquote>\n<p>对于 tracked struct 的 fields，一旦发现它 outdated，就应该 panic。如果保存的旧\n值的 <code>verified_at</code> 小于 <code>runtime.current_revision</code>，我们就说这个旧值\noutdated。</p>\n</blockquote>\n<h2>Is it really outdated?</h2>\n<p>上一节中 <code>tracked.field(db)</code> 其实是可用的，我们单纯用它的 <code>verified_at</code> 做比较是有漏洞的。这个场景的特殊之处在于 <code>tracked.field(db)</code> 既是 <code>tracked_fn(&#x26;db, input)</code>这个 query 的 input，也是其 output。<code>tracked.field(db)</code> 是在\n<code>MyTracked::new</code> 中被创建的，所以是这个 query 的 output。所以，我们能不能加上一条限制：如果某个 dependency/input 同样也是该 query 的 output，我们就认为这个\ndependency/input 是有效的。</p>\n<p>很遗憾，这仍然有漏洞，看下面这个例子。</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-meta\">#[salsa::tracked]</span>\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">tracked_fn</span>(db: &#x26;Db, input: MyInput) <span class=\"hljs-punctuation\">-></span> <span class=\"hljs-type\">u32</span> {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">tracked</span> = MyTracked::<span class=\"hljs-title function_ invoke__\">new</span>(db, input.<span class=\"hljs-title function_ invoke__\">field</span>(db) * <span class=\"hljs-number\">2</span>);\n    <span class=\"hljs-title function_ invoke__\">tracked_fn_extra</span>(tracked)\n}\n\n<span class=\"hljs-meta\">#[salsa::tracked]</span>\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">tracked_fn_extra</span>(db: &#x26;Db, tracked: MyTracked) <span class=\"hljs-punctuation\">-></span> <span class=\"hljs-type\">u32</span> {\n    tracked.<span class=\"hljs-title function_ invoke__\">field</span>(db)\n}\n\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">main</span>() {\n    ...\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">input</span> = MyInput::<span class=\"hljs-title function_ invoke__\">new</span>(&#x26;db, <span class=\"hljs-number\">11</span>);\n    _ = <span class=\"hljs-title function_ invoke__\">tracked_fn</span>(&#x26;db, input);\n\n    <span class=\"hljs-comment\">// A \"synthetic write\" causes the system to act *as though* some</span>\n    <span class=\"hljs-comment\">// input of durability `durability` has changed. This is mostly</span>\n    <span class=\"hljs-comment\">// useful for profiling scenarios.</span>\n    db.<span class=\"hljs-title function_ invoke__\">synthetic_write</span>(salsa::Durabiliby::High);\n    _ = <span class=\"hljs-title function_ invoke__\">tracked_fn</span>(&#x26;db, input); <span class=\"hljs-comment\">// panic</span>\n}\n</code></pre>\n<h2>Query</h2>\n<blockquote>\n<p>Salsa is a query based increamental computation system.</p>\n</blockquote>\n<p>Query 一词经常在 Salsa 中提到，那到底什么是 query 呢？是 <code>tracked_fn</code> 这个函数吗？我的理解是 <code>tracked_fn(&#x26;db, input)</code> 这个调用？当然\n<code>input.field(db)</code>，<code>tracked.field(&#x26;db)</code> 都是 query。</p>\n<p>个人认为在 Salsa 代码中，<code>DatabaseKeyIndex</code>、<code>DependencyIndex</code> 和 <code>Memo</code> 都对应一个 query。</p>\n<h2>Input &#x26; Output</h2>\n<p>这里所说的 input 不是 <code>salsa::input</code>，Input 和 output 都是对 query 而言的。Input\n就是这个 query 依赖的其他 query，我们在<a href=\"./07_salsa_dependency.md\">这篇文章</a>中讨论过。Query 的 output 有 3 种：</p>\n<ul>\n<li>tracked strcuts created</li>\n<li>invacations of specify</li>\n<li>accumulators pushed to</li>\n</ul>","title":"(WIP) Salsa: Is the tracked struct valid?","date":"2022-09-26"}},"__N_SSG":true}