{"pageProps":{"postData":{"id":"wsl","contentHtml":"<h2>安装 WSL2</h2>\n<p>按照官网 <a href=\"https://learn.microsoft.com/en-us/windows/wsl/install#install-wsl-command\">How to install Linux on Windows with WSL</a> 的步骤安装 WSL2。下面是我安装的步骤：</p>\n<p>管理员身份运行 powershell，执行以下命令：</p>\n<pre><code>wsl --install\n</code></pre>\n<p>重启电脑</p>\n<p>执行 <code>wsl --list</code> 查看已安装的 distro，但是显示没有安装任何 distro。官方文档的意思是执行完 <code>wsl --install</code> 后会自动安装 Ubuntu，但是我这里没有自动安装 Ubuntu。然后我发现在应用程序列表中有一个 Ubuntu，点击它，按照提示安装 Ubuntu，然后就可以在 <code>wsl --list</code> 的输出中看到 Ubuntu 了。现在可以使用 <code>wsl</code> 命令进入 Ubuntu。</p>\n<p><img src=\"/wsl/20230921075234.png\" alt=\"\"></p>\n<h2>配置代理</h2>\n<p>前置条件：</p>\n<ol>\n<li>在 Windows 是使用 clash for windows 作为代理</li>\n<li>代理的端口是 7890</li>\n</ol>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/sh</span>\nhostip=$(<span class=\"hljs-built_in\">cat</span> /etc/resolv.conf | grep nameserver | awk <span class=\"hljs-string\">'{ print $2 }'</span>)\nwslip=$(hostname -I | awk <span class=\"hljs-string\">'{print $1}'</span>)\nport=7890\n\nPROXY_HTTP=<span class=\"hljs-string\">\"http://<span class=\"hljs-variable\">${hostip}</span>:<span class=\"hljs-variable\">${port}</span>\"</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">set_proxy</span></span>(){\n    <span class=\"hljs-built_in\">export</span> http_proxy=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${PROXY_HTTP}</span>\"</span>\n    <span class=\"hljs-built_in\">export</span> HTTP_PROXY=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${PROXY_HTTP}</span>\"</span>\n\n    <span class=\"hljs-built_in\">export</span> https_proxy=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${PROXY_HTTP}</span>\"</span>\n    <span class=\"hljs-built_in\">export</span> HTTPS_proxy=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${PROXY_HTTP}</span>\"</span>\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">unset_proxy</span></span>(){\n    <span class=\"hljs-built_in\">unset</span> http_proxy\n    <span class=\"hljs-built_in\">unset</span> HTTP_PROXY\n    <span class=\"hljs-built_in\">unset</span> https_proxy\n    <span class=\"hljs-built_in\">unset</span> HTTPS_PROXY\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">test_setting</span></span>(){\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Host ip:\"</span> <span class=\"hljs-variable\">${hostip}</span>\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"WSL ip:\"</span> <span class=\"hljs-variable\">${wslip}</span>\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Current proxy:\"</span> <span class=\"hljs-variable\">$https_proxy</span>\n}\n\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>\"</span> = <span class=\"hljs-string\">\"set\"</span> ]\n<span class=\"hljs-keyword\">then</span>\n    set_proxy\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Proxy set to <span class=\"hljs-variable\">${PROXY_HTTP}</span>\"</span>\n\n<span class=\"hljs-keyword\">elif</span> [ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>\"</span> = <span class=\"hljs-string\">\"unset\"</span> ]\n<span class=\"hljs-keyword\">then</span>\n    unset_proxy\n\n<span class=\"hljs-keyword\">elif</span> [ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>\"</span> = <span class=\"hljs-string\">\"test\"</span> ]\n<span class=\"hljs-keyword\">then</span>\n    test_setting\n<span class=\"hljs-keyword\">else</span>\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Unsupported arguments.\"</span>\n<span class=\"hljs-keyword\">fi</span>\n</code></pre>\n<pre><code class=\"hljs language-shell\">source proxy.sh set\n</code></pre>\n<p>用 <code>curl -v www.google.com</code> 测试，发现代理不起作用。</p>\n<p>在 clash for windows 中，开启 <code>Allow LAN</code> 选项，就可以了。</p>\n<p><img src=\"/wsl/20230921080117.png\" alt=\"\"></p>\n<h2>配置 terminal 以及常用命令行工具</h2>\n<h3>安装 Nix</h3>\n<p>使用 <a href=\"https://github.com/DeterminateSystems/nix-installer\">nix-installer</a> 安装</p>\n<pre><code class=\"hljs language-shell\">curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install\n</code></pre>\n<h3>安装 home-manager</h3>\n<p>按照 <a href=\"https://nix-community.github.io/home-manager/index.html#sec-install-standalone\">install standalone</a> 安装。</p>\n<p>不过安装巨慢，感觉是 <code>nix-shell</code> 没有读取走代理。</p>\n<p>参考 <a href=\"https://github.com/NixOS/nixpkgs/issues/27535#issuecomment-1178444327\">https://github.com/NixOS/nixpkgs/issues/27535#issuecomment-1178444327</a> 的方案配置代理，下面是整理的适合 wsl 的脚本：</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/sh</span>\nhostip=$(<span class=\"hljs-built_in\">cat</span> /etc/resolv.conf | grep nameserver | awk <span class=\"hljs-string\">'{ print $2 }'</span>)\nwslip=$(hostname -I | awk <span class=\"hljs-string\">'{print $1}'</span>)\nport=7890\n\nPROXY_HTTP=<span class=\"hljs-string\">\"http://<span class=\"hljs-variable\">${hostip}</span>:<span class=\"hljs-variable\">${port}</span>\"</span>\n\nsudo <span class=\"hljs-built_in\">mkdir</span> -p /etc/systemd/system/nix-daemon.service.d/\n<span class=\"hljs-built_in\">cat</span> &#x3C;&#x3C; <span class=\"hljs-string\">EOF | sudo tee /etc/systemd/system/nix-daemon.service.d/override.conf >/dev/null\n[Service]\nEnvironment=\"http_proxy=${PROXY_HTTP}\"\nEnvironment=\"https_proxy=${PROXY_HTTP}\"\nEnvironment=\"all_proxy=${PROXY_HTTP}\"\nEOF</span>\nsudo systemctl daemon-reload\nsudo systemctl restart nix-daemon\n</code></pre>\n<h4>配置 home-manager</h4>\n<pre><code class=\"hljs language-shell\">git clone https://github.com/xffxff/nixfiles\n\nln -s /path/to/nixfiles ~/.config/home-manager\n\nhome-manager switch\n</code></pre>\n<p>大功告成，不过有个瑕疵是 terminal 的字体不对，zsh 主题有些图标显示为乱码。</p>\n<p><img src=\"/wsl/20230921090053.png\" alt=\"\"></p>\n<p>下载 <a href=\"https://github.com/ryanoasis/nerd-fonts/blob/master/patched-fonts/Meslo/M/Regular/MesloLGMNerdFont-Regular.ttf\">Meslo LGM Nerd Font</a> 并安装。</p>\n<p>然后在 Windows Terminal 中将字体设置为 MesloLGM Nerd Font</p>\n<p><img src=\"/wsl/20230921090242.png\" alt=\"\"></p>\n<p>现在看起来好多了。</p>\n<p><img src=\"/wsl/20230921090418.png\" alt=\"\"></p>","title":"安装配置 WSL2","date":"2023-09-21"}},"__N_SSG":true}