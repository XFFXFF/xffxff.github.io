{"pageProps":{"postData":{"id":"08_salsa_tracked_method","contentHtml":"<p>PR <a href=\"https://github.com/salsa-rs/salsa/pull/392\">392</a> supports tracked methods, I reviewed it and thought there were some notes to make, I tried to making it an RFC, although the pr was not created by me.</p>\n<h2>Metadata</h2>\n<ul>\n<li>introduced in: <a href=\"https://github.com/salsa-rs/salsa/pull/392\">https://github.com/salsa-rs/salsa/pull/392</a></li>\n</ul>\n<h2>Summary</h2>\n<p>Support tracked methods</p>\n<h2>Motivation</h2>\n<p>In the Salsa 2022 system, tracked functions are almost always defined on some kind of salsa struct, it would be nice if we support tracked methods.</p>\n<h2>User's guide</h2>\n<p>Impl blocks with <code>#[salsa::tracked]</code> and then create tracked methods by marking individual methods with <code>#[salsa::tracked]</code>. We will get an error if we annotate a method with <code>#[salsa::tracked]</code> but forget to mark the impl block.</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-meta\">#[salsa::jar(db = Db)]</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Jar</span>(MyInput, MyInput_tracked_fn)\n\n\n<span class=\"hljs-meta\">#[salsa::input]</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">MyInput</span> {\n    field: <span class=\"hljs-type\">u32</span>\n}\n\n<span class=\"hljs-meta\">#[salsa::tracked(jar = Jar)]</span>\n<span class=\"hljs-keyword\">impl</span> <span class=\"hljs-title class_\">MyInput</span> {\n    <span class=\"hljs-meta\">#[salsa::tracked]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">tracked_fn</span>(<span class=\"hljs-keyword\">self</span>, db: &#x26;<span class=\"hljs-keyword\">dyn</span> Db) <span class=\"hljs-punctuation\">-></span> <span class=\"hljs-type\">u32</span> {\n        <span class=\"hljs-keyword\">self</span>.<span class=\"hljs-title function_ invoke__\">field</span>(db) * <span class=\"hljs-number\">2</span>\n    }\n}\n</code></pre>\n<p>We also support trait impls.</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-meta\">#[salsa::jar(db = Db)]</span>\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Jar</span>(MyInput, MyInput_TrackedTrait_tracked_trait_fn)\n\n<span class=\"hljs-keyword\">trait</span> <span class=\"hljs-title class_\">TrackedTrait</span> {\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">tracked_trait_fn</span>(<span class=\"hljs-keyword\">self</span>, db: &#x26;<span class=\"hljs-keyword\">dyn</span> Db) <span class=\"hljs-punctuation\">-></span> <span class=\"hljs-type\">u32</span>;\n}\n\n<span class=\"hljs-meta\">#[salsa::tracked(jar = Jar)]</span>\n<span class=\"hljs-keyword\">impl</span> <span class=\"hljs-title class_\">TrackedTrait</span> <span class=\"hljs-keyword\">for</span> <span class=\"hljs-title class_\">MyInput</span> {\n    <span class=\"hljs-meta\">#[salsa::tracked]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">tracked_trait_fn</span>(<span class=\"hljs-keyword\">self</span>, db: &#x26;<span class=\"hljs-keyword\">dyn</span> Db) <span class=\"hljs-punctuation\">-></span> <span class=\"hljs-type\">u32</span> {\n        <span class=\"hljs-keyword\">self</span>.<span class=\"hljs-title function_ invoke__\">field</span>(db) * <span class=\"hljs-number\">4</span>\n    }\n}\n</code></pre>\n<h2>Reference Guide</h2>\n<p>For</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-meta\">#[salsa::tracked(jar = Jar)]</span>\n<span class=\"hljs-keyword\">impl</span> <span class=\"hljs-title class_\">MyInput</span> {\n    <span class=\"hljs-meta\">#[salsa::tracked]</span>\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">tracked_fn</span>(<span class=\"hljs-keyword\">self</span>, db: &#x26;<span class=\"hljs-keyword\">dyn</span> Db) <span class=\"hljs-punctuation\">-></span> <span class=\"hljs-type\">u32</span> {\n        <span class=\"hljs-keyword\">self</span>.<span class=\"hljs-title function_ invoke__\">field</span>(db) * <span class=\"hljs-number\">2</span>\n    }\n}\n</code></pre>\n<p>We treat it as</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-meta\">#[salsa::tracked(jar = Jar)]</span>\n<span class=\"hljs-title function_ invoke__\">MyInput_tracked_fn</span>(db: &#x26;<span class=\"hljs-keyword\">dyn</span> Db, __salsa_self: MyINput) <span class=\"hljs-punctuation\">-></span> <span class=\"hljs-type\">u32</span> {\n    __salsa_self.<span class=\"hljs-title function_ invoke__\">field</span>(db) * <span class=\"hljs-number\">2</span>\n}\n</code></pre>\n<p>So what we generate is the code generated for the tracked function <code>MyInput_tracked_fn</code> and the impl block looks like</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-keyword\">impl</span> <span class=\"hljs-title class_\">MyInput</span> {\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">tracked_fn</span>(<span class=\"hljs-keyword\">self</span>, db: &#x26;<span class=\"hljs-keyword\">dyn</span> Db) <span class=\"hljs-punctuation\">-></span> <span class=\"hljs-type\">u32</span> {\n        <span class=\"hljs-built_in\">Clone</span>::<span class=\"hljs-title function_ invoke__\">clone</span>(MyInput_tracked_fn::<span class=\"hljs-title function_ invoke__\">get</span>(db, <span class=\"hljs-keyword\">self</span>))\n    }\n}\n</code></pre>\n<p><strong>How to raise an error if we annotate a method with <code>#[salsa::tracked]</code> but forget to mark the impl block?</strong></p>\n<p>If we forget to mark the impl block, the tracked methods with attributes <code>#[salsa::tracked]</code> will be treated as tracked functions, so we just check if the tracked function has <code>self</code> argument, and if so, we can be sure we forget to mark the impl block.</p>\n<p><a href=\"https://github.com/salsa-rs/salsa/blob/bac4c668cfb20ad2971e244d6fe5337c651f0f17/components/salsa-2022-macros/src/tracked_fn.rs#L21-L26\">related code</a></p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-comment\">// salsa-2022-macros::tracked_fn::tracked_fn</span>\n\n<span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">syn</span>::FnArg::<span class=\"hljs-title function_ invoke__\">Receiver</span>(receiver) = &#x26;item_fn.sig.inputs[<span class=\"hljs-number\">0</span>] {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_ invoke__\">Err</span>(syn::Error::<span class=\"hljs-title function_ invoke__\">new</span>(\n        receiver.<span class=\"hljs-title function_ invoke__\">span</span>(),\n        <span class=\"hljs-string\">\"#[salsa::tracked] must also be applied to the impl block for tracked methods\"</span>,\n    ));\n}\n</code></pre>","title":"Salsa: tracked methods","date":"2022-09-04"}},"__N_SSG":true}