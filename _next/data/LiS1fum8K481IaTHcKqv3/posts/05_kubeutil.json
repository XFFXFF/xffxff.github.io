{"pageProps":{"postData":{"id":"05_kubeutil","contentHtml":"<p>这篇文章介绍了我最常用的 3 个 <code>kubectl</code> 命令，以及如何使用 bash 脚本将它们封装成我喜欢的样子。</p>\n<p>最近开始用 <code>kubectl</code>，发现有几个命令高频出现，下面来看一下这几个命令。</p>\n<ol>\n<li>查询 pod 的运行状态</li>\n</ol>\n<pre><code class=\"hljs language-sh\">kubectl get pods -n NAMESPACE | grep NAME_PATTERN\n</code></pre>\n<ol start=\"2\">\n<li>查询某个 pod 的日志</li>\n</ol>\n<pre><code class=\"hljs language-sh\">kubectl get pods -n NAMESPACE | grep xxx | awk <span class=\"hljs-string\">'{print $1}'</span> | xargs kubectl logs -n NAMESPACE\n</code></pre>\n<ol start=\"3\">\n<li>登录到某个 pod</li>\n</ol>\n<pre><code class=\"hljs language-sh\">kubectl get pods -n NAMESPACE | grep xxx | awk <span class=\"hljs-string\">'{print $1}'</span> | xargs -I {} kubectl <span class=\"hljs-built_in\">exec</span> -n NAMESPACE -it {} /bin/bash\n</code></pre>\n<p>每次都要敲这么多字符才能达成我们想要的结果，基本都是重复的东西，很容易想到我们可以把这几个命令写成 bash 脚本，假设这个脚本叫 <code>kubeutil</code>，\n预期的接口是</p>\n<pre><code class=\"hljs language-sh\"><span class=\"hljs-comment\"># 获取名字中包含 “xxx” 的 pod 的运行状态</span>\nkubeutil get xxx\n\n<span class=\"hljs-comment\"># 获取名字中包含 “xxx” 的 pod 的日志</span>\nkubeutil <span class=\"hljs-built_in\">log</span> xxx\n\n<span class=\"hljs-comment\"># 登录到名字中包含 “xxx” 的 pod</span>\nkubeutil <span class=\"hljs-built_in\">exec</span> xxx\n</code></pre>\n<p><code>kubeutil log</code> 和 <code>kubeutil exec</code> 这两个脚本在逻辑上有个明显的漏洞，我们用 <code>grep xxx</code> 去匹配 pod 名字中包含 \"xxx\" 的 pod，如果有不止一个 pod 满足匹配要求呢？应该获取哪个 pod 的日志呢？登录进哪个 pod 呢？</p>\n<p>我们需要使 <code>grep xxx</code> 只匹配唯一一个 pod，那就得下更多的功夫在 <code>xxx</code> 上，得找到合适的匹配规则。实际上这让我很头疼，我总是需要先用 <code>kubeutil get xxx</code> 去匹配到一些 pod，查看这些 pod 的名字，然后去修改 <code>xxx</code>。</p>\n<pre><code class=\"hljs language-sh\">kubeutil <span class=\"hljs-built_in\">exec</span> foo\n<span class=\"hljs-comment\"># Oh, get an error!!!</span>\n\nkubeutil get foo\n<span class=\"hljs-comment\"># foo-bf47bc459-qkzbv                        1/1     Running   0          15d</span>\n<span class=\"hljs-comment\"># foo-7cd5bdd6cc-8n6vd                       1/1     Running   0          19d</span>\n\nkubeutil <span class=\"hljs-built_in\">exec</span> foo-bf\n<span class=\"hljs-comment\"># it worked!</span>\n</code></pre>\n<p>我们能做的更好吗？</p>\n<p>我们可以将 <code>kubeutil</code> 做成交互式的</p>\n<pre><code class=\"hljs language-sh\">$ kubeutil <span class=\"hljs-built_in\">exec</span> foo                   <span class=\"hljs-comment\"># 运行指令，输出匹配到的 pod，并附上 index，让用户选择要登录到哪个 pod</span>\n0 foo-bf47bc459-qkzbv\n1 foo-7cd5bdd6cc-8n6vd\nEnter the index of pod that you want to <span class=\"hljs-keyword\">select</span> > 1  <span class=\"hljs-comment\"># 用户输入 1，表示选择登录到 `foo-7cd5bdd6cc-8n6vd`</span>\n</code></pre>\n<p>完整代码</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash</span>\n\nNAMESPACE=<span class=\"hljs-string\">\"xxx\"</span>\n\nRED=<span class=\"hljs-string\">'\\033[0;31m'</span>\nGREEN=<span class=\"hljs-string\">'\\033[0;32m'</span>\nYELLOW=<span class=\"hljs-string\">'\\033[1;33m'</span>\nNC=<span class=\"hljs-string\">'\\033[0m'</span>\n\n<span class=\"hljs-keyword\">function</span> select_pod {\n    <span class=\"hljs-built_in\">local</span> pod_names=($( kubectl get pods -n <span class=\"hljs-variable\">$NAMESPACE</span> | grep <span class=\"hljs-variable\">$1</span> | awk <span class=\"hljs-string\">'{print $1}'</span> ))\n\n    <span class=\"hljs-built_in\">local</span> selected_pod=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${pod_names[0]}</span>\"</span>\n    <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">${#pod_names[@]}</span> -gt 1 ]]\n    <span class=\"hljs-keyword\">then</span>\n        <span class=\"hljs-comment\"># display pod name line by line with index</span>\n        <span class=\"hljs-built_in\">local</span> i=0\n        <span class=\"hljs-keyword\">for</span> name <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${pod_names[@]}</span>\"</span>\n        <span class=\"hljs-keyword\">do</span>\n            <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$i</span> <span class=\"hljs-variable\">$name</span> >&#x26;2\n            i=$((i+<span class=\"hljs-number\">1</span>))\n        <span class=\"hljs-keyword\">done</span>\n\n        <span class=\"hljs-comment\"># read the user input</span>\n        <span class=\"hljs-built_in\">echo</span> -e -n <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${GREEN}</span>Enter the index of the pod you want to select > <span class=\"hljs-variable\">${NC}</span>\"</span> >&#x26;2\n        <span class=\"hljs-built_in\">read</span> index\n        selected_pod=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${pod_names[$index]}</span>\"</span>\n    <span class=\"hljs-keyword\">fi</span>\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$selected_pod</span>\n}\n\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$#</span> -ne 2 ]; <span class=\"hljs-keyword\">then</span>\n        <span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${RED}</span>error<span class=\"hljs-variable\">${NC}</span>: please specify 2 command line arguments\"</span>\n\t\t<span class=\"hljs-built_in\">exit</span> 1\n<span class=\"hljs-keyword\">fi</span>\n\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-variable\">$1</span> <span class=\"hljs-keyword\">in</span>\n    get)\n        kubectl get pods -n <span class=\"hljs-variable\">$NAMESPACE</span> | grep <span class=\"hljs-variable\">$2</span>\n    ;;\n\n    <span class=\"hljs-built_in\">log</span>)\n        selected_pod=$( select_pod <span class=\"hljs-variable\">$2</span> )\n        kubectl logs -n <span class=\"hljs-variable\">$NAMESPACE</span> <span class=\"hljs-variable\">$selected_pod</span>\n    ;;\n\n    <span class=\"hljs-built_in\">exec</span>)\n        selected_pod=$( select_pod <span class=\"hljs-variable\">$2</span> )\n        kubectl <span class=\"hljs-built_in\">exec</span> -n <span class=\"hljs-variable\">$NAMESPACE</span> -it <span class=\"hljs-variable\">$selected_pod</span> /bin/bash\n    ;;\n\n    *)\n        <span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${RED}</span>error: <span class=\"hljs-variable\">${NC}</span>unsupported command\"</span>\n    ;;\n<span class=\"hljs-keyword\">esac</span>\n</code></pre>","title":"封装我最常用的 3 个 kubectl 命令","date":"2022-08-17"}},"__N_SSG":true}