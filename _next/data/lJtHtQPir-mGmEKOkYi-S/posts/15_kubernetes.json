{"pageProps":{"postData":{"id":"15_kubernetes","contentHtml":"<p>今年已经是工作的第三年了，从一开始工作就接触并使用 kubernetes，但使用方式主要是起一个 pod 作为开发机。对 kubernetes 的第一映像是很复杂，我通常使用 rancher 界面来操作，rancher 界面就很复杂，什么 service，workload，development 等等让我摸不着头脑。由于我的需求很简单，导致我也没有任何动力去深入了解 kubernetes。</p>\n<p>转变发生在两个月前，我以后端开发的身份投入到一个微服务架构的项目，kubernetes 对这个项目非常重要。但在这两个月里，我对 kubernetes 的理解仍然非常有限，将我们的服务部署到 kubernetes 并不是我的主要工作，同事写好了复杂的配置，我只需要 <code>helm install</code> 和 <code>helm upgrade</code> 。。。</p>\n<p>直到上周末，我开始阅读 《kubernetes in action》，发现 kubernetes 并没有想象的那么复杂，且被它的设计，它的抽象所吸引。现在我对 kubernetes 有了一些更 high level 的认识，回过头来看 kubernetes 在我所参与的项目中起到的作用，记录我眼中的 kubernetes。</p>\n<blockquote>\n<p>我最开始读的 《kubernetes in action》是第一版，但读了几章后发现有点旧，书中的代码/命令跑不通了，就去看了第二版，第二版目前还是预览版，我是在 <a href=\"https://livebook.manning.com/book/kubernetes-in-action-second-edition\">https://livebook.manning.com/book/kubernetes-in-action-second-edition</a> 看的，付费支持了作者，现在看来真是物超所值。</p>\n</blockquote>\n<p>一开始就使用 kubernetes，享受着它带来的便利，会对这些便利习以为常，甚至觉得都是基本操作，就像现在出生的小朋友，从小接触智能手机，互联网，当然不会觉得这些东西很厉害。所以应该读读历史，没有 kubernetes 的时代后端开发是什么样子？尤其对我这种半路出家的后端开发来说，更应该读读历史。</p>\n<h2>谁去部署服务</h2>\n<p>除了 kubernetes 本身是公司运维团队帮忙搭建的，之后所有的服务都是由有我们 dev 团队自己部署的。我们同时负责业务逻辑的开发与产品的部署，这有什么好处？第一，部署并不是和业务逻辑完全分离的，在部署的时候可能遇到很多问题，这些问题可能和业务逻辑非常相关，如果对业务逻辑熟悉，当然能更快定位并解决问题。第二，我们的业务逻辑经常变化，除了功能上的变化，还会有很多 bug，我们需要经常重新部署或者更新部署，如果每次部署都要去麻烦运维团队，那么我们的效率就会大打折扣。</p>\n<p>kubernetes 让 dev 团队自己部署服务成为了可能，你不需要去关心底层的硬件，操作系统内核的版本，不同的服务应该部署在哪台机器，不同的机器如何通信。。。</p>\n<h2>如何部署到共有云</h2>\n<p>我们在开发测试过程中将服务部署在公司内部的 kubernetes 集群上，但是在正式上线之前，我们需要将服务部署到共有云上，比如阿里云，腾讯云，华为云等等。我们需要另一套东西吗？部署到共有云需要很大的人力成本吗？No！现在基本上所有的公有云都会集成 kubernetes，这样我们就可以将部署在公司内部的服务无缝迁移到公有云，对于 kubernetes 来说，它接受的 API 都是一样的，它提供的服务也都是一样的。很难想象没有 kubernetes，或 kubernetes 没有成为部署的标准之前，每家云厂商有自己的 API，有自己的部署方式，这样的话，需要更多的学习成本，更换云厂商的成本也会变高。</p>\n<h2>为微服务而生</h2>\n<p>我们的项目就是微服务架构，现在有大约十几个服务，如果没有 kubernetes，手动部署的话，真是很头疼。它们应该部署到哪些机器？这些服务之间如何互相发现？怎么把服务暴露出来让所有人能访问到？有个服务挂了怎么办？怎么给服务做 scaling？如何做 load balance？有了 kubernetes 后，这些问题都可以轻松解决，有些甚至你完全不用操心，kubernetes 自动就帮你做了，比如某个服务挂了就会自动帮你重启，你甚至不需要任何配置。</p>\n<hr>\n<p>今天主要聊聊我个人使用 kubernetes 的感受，接下来我会写一些文章，或者叫笔记更合适，去记录我在读 《Kubernetes in Action, 2nd Edition》这本书的过程</p>","title":"我眼中的 kubernetes","date":"2023-01-05"}},"__N_SSG":true}