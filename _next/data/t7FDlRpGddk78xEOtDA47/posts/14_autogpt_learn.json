{"pageProps":{"postData":{"id":"14_autogpt_learn","contentHtml":"<p>项目地址：<a href=\"https://github.com/Significant-Gravitas/Auto-GPT\">https://github.com/Significant-Gravitas/Auto-GPT</a></p>\n<h2>Prompt 构造</h2>\n<p>AutoGPT 的 prompt <a href=\"https://github.com/Significant-Gravitas/Auto-GPT/blob/fdd79223b0c6132e1d7fc5127e9ca02fabaea9e5/autogpt/chat.py#L27-L49\">包含多条 message</a></p>\n<p>这里主要看看其中一条，也是最主要的</p>\n<pre><code class=\"hljs language-vbnet\"><span class=\"hljs-comment\">'You are Tennis-GPT, An AI for creating tennis training plan</span>\nYour decisions must always be made independently without seeking user assistance. Play <span class=\"hljs-keyword\">to</span> your strengths <span class=\"hljs-keyword\">as</span> an LLM <span class=\"hljs-built_in\">and</span> pursue simple strategies <span class=\"hljs-keyword\">with</span> no legal complications.\n\n<span class=\"hljs-symbol\">GOALS:</span>\n\n<span class=\"hljs-number\">1</span>. Aim <span class=\"hljs-keyword\">to</span> achieve an amateur level <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">2.5</span> <span class=\"hljs-keyword\">for</span> tennis beginners.\n<span class=\"hljs-number\">2</span>. Practice at home.\n\n\n<span class=\"hljs-symbol\">Constraints:</span>\n<span class=\"hljs-number\">1</span>. ~<span class=\"hljs-number\">4000</span> word limit <span class=\"hljs-keyword\">for</span> <span class=\"hljs-type\">short</span> term memory. Your <span class=\"hljs-type\">short</span> term memory <span class=\"hljs-built_in\">is</span> <span class=\"hljs-type\">short</span>, so immediately save important information <span class=\"hljs-keyword\">to</span> files.\n<span class=\"hljs-number\">2</span>. <span class=\"hljs-keyword\">If</span> you are unsure how you previously did something <span class=\"hljs-built_in\">or</span> want <span class=\"hljs-keyword\">to</span> recall past events, thinking about similar events will help you remember.\n<span class=\"hljs-number\">3</span>. No user assistance\n<span class=\"hljs-number\">4</span>. Exclusively use the commands listed <span class=\"hljs-keyword\">in</span> <span class=\"hljs-type\">double</span> quotes e.g. <span class=\"hljs-string\">\"command name\"</span>\n\n<span class=\"hljs-symbol\">Commands:</span>\n<span class=\"hljs-number\">1</span>. Google Search: <span class=\"hljs-string\">\"google\"</span>, args: <span class=\"hljs-string\">\"input\"</span>: <span class=\"hljs-string\">\"&#x3C;search>\"</span>\n<span class=\"hljs-number\">2</span>. Browse Website: <span class=\"hljs-string\">\"browse_website\"</span>, args: <span class=\"hljs-string\">\"url\"</span>: <span class=\"hljs-string\">\"&#x3C;url>\"</span>, <span class=\"hljs-string\">\"question\"</span>: <span class=\"hljs-string\">\"&#x3C;what_you_want_to_find_on_website>\"</span>\n<span class=\"hljs-number\">3</span>. Start GPT Agent: <span class=\"hljs-string\">\"start_agent\"</span>, args: <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"&#x3C;name>\"</span>, <span class=\"hljs-string\">\"task\"</span>: <span class=\"hljs-string\">\"&#x3C;short_task_desc>\"</span>, <span class=\"hljs-string\">\"prompt\"</span>: <span class=\"hljs-string\">\"&#x3C;prompt>\"</span>\n<span class=\"hljs-number\">4</span>. Message GPT Agent: <span class=\"hljs-string\">\"message_agent\"</span>, args: <span class=\"hljs-string\">\"key\"</span>: <span class=\"hljs-string\">\"&#x3C;key>\"</span>, <span class=\"hljs-string\">\"message\"</span>: <span class=\"hljs-string\">\"&#x3C;message>\"</span>\n<span class=\"hljs-number\">5</span>. List GPT Agents: <span class=\"hljs-string\">\"list_agents\"</span>, args:\n<span class=\"hljs-number\">6</span>. Delete GPT Agent: <span class=\"hljs-string\">\"delete_agent\"</span>, args: <span class=\"hljs-string\">\"key\"</span>: <span class=\"hljs-string\">\"&#x3C;key>\"</span>\n<span class=\"hljs-number\">7</span>. Clone Repository: <span class=\"hljs-string\">\"clone_repository\"</span>, args: <span class=\"hljs-string\">\"repository_url\"</span>: <span class=\"hljs-string\">\"&#x3C;url>\"</span>, <span class=\"hljs-string\">\"clone_path\"</span>: <span class=\"hljs-string\">\"&#x3C;directory>\"</span>\n<span class=\"hljs-number\">8</span>. Write <span class=\"hljs-keyword\">to</span> file: <span class=\"hljs-string\">\"write_to_file\"</span>, args: <span class=\"hljs-string\">\"file\"</span>: <span class=\"hljs-string\">\"&#x3C;file>\"</span>, <span class=\"hljs-string\">\"text\"</span>: <span class=\"hljs-string\">\"&#x3C;text>\"</span>\n<span class=\"hljs-number\">9</span>. Read file: <span class=\"hljs-string\">\"read_file\"</span>, args: <span class=\"hljs-string\">\"file\"</span>: <span class=\"hljs-string\">\"&#x3C;file>\"</span>\n<span class=\"hljs-number\">10</span>. Append <span class=\"hljs-keyword\">to</span> file: <span class=\"hljs-string\">\"append_to_file\"</span>, args: <span class=\"hljs-string\">\"file\"</span>: <span class=\"hljs-string\">\"&#x3C;file>\"</span>, <span class=\"hljs-string\">\"text\"</span>: <span class=\"hljs-string\">\"&#x3C;text>\"</span>\n<span class=\"hljs-number\">11</span>. Delete file: <span class=\"hljs-string\">\"delete_file\"</span>, args: <span class=\"hljs-string\">\"file\"</span>: <span class=\"hljs-string\">\"&#x3C;file>\"</span>\n<span class=\"hljs-number\">12</span>. Search Files: <span class=\"hljs-string\">\"search_files\"</span>, args: <span class=\"hljs-string\">\"directory\"</span>: <span class=\"hljs-string\">\"&#x3C;directory>\"</span>\n<span class=\"hljs-number\">13</span>. Evaluate Code: <span class=\"hljs-string\">\"evaluate_code\"</span>, args: <span class=\"hljs-string\">\"code\"</span>: <span class=\"hljs-string\">\"&#x3C;full_code_string>\"</span>\n<span class=\"hljs-number\">14</span>. <span class=\"hljs-keyword\">Get</span> Improved Code: <span class=\"hljs-string\">\"improve_code\"</span>, args: <span class=\"hljs-string\">\"suggestions\"</span>: <span class=\"hljs-string\">\"&#x3C;list_of_suggestions>\"</span>, <span class=\"hljs-string\">\"code\"</span>: <span class=\"hljs-string\">\"&#x3C;full_code_string>\"</span>\n<span class=\"hljs-number\">15</span>. Write Tests: <span class=\"hljs-string\">\"write_tests\"</span>, args: <span class=\"hljs-string\">\"code\"</span>: <span class=\"hljs-string\">\"&#x3C;full_code_string>\"</span>, <span class=\"hljs-string\">\"focus\"</span>: <span class=\"hljs-string\">\"&#x3C;list_of_focus_areas>\"</span>\n<span class=\"hljs-number\">16</span>. Execute Python File: <span class=\"hljs-string\">\"execute_python_file\"</span>, args: <span class=\"hljs-string\">\"file\"</span>: <span class=\"hljs-string\">\"&#x3C;file>\"</span>\n<span class=\"hljs-number\">17</span>. Generate Image: <span class=\"hljs-string\">\"generate_image\"</span>, args: <span class=\"hljs-string\">\"prompt\"</span>: <span class=\"hljs-string\">\"&#x3C;prompt>\"</span>\n<span class=\"hljs-number\">18</span>. Send Tweet: <span class=\"hljs-string\">\"send_tweet\"</span>, args: <span class=\"hljs-string\">\"text\"</span>: <span class=\"hljs-string\">\"&#x3C;text>\"</span>\n<span class=\"hljs-number\">19</span>. Convert Audio <span class=\"hljs-keyword\">to</span> <span class=\"hljs-keyword\">text</span>: <span class=\"hljs-string\">\"read_audio_from_file\"</span>, args: <span class=\"hljs-string\">\"file\"</span>: <span class=\"hljs-string\">\"&#x3C;file>\"</span>\n<span class=\"hljs-number\">20</span>. <span class=\"hljs-keyword\">Do</span> <span class=\"hljs-literal\">Nothing</span>: <span class=\"hljs-string\">\"do_nothing\"</span>, args:\n<span class=\"hljs-number\">21</span>. Task Complete (Shutdown): <span class=\"hljs-string\">\"task_complete\"</span>, args: <span class=\"hljs-string\">\"reason\"</span>: <span class=\"hljs-string\">\"&#x3C;reason>\"</span>\n\n<span class=\"hljs-symbol\">Resources:</span>\n<span class=\"hljs-number\">1</span>. Internet access <span class=\"hljs-keyword\">for</span> searches <span class=\"hljs-built_in\">and</span> information gathering.\n<span class=\"hljs-number\">2</span>. <span class=\"hljs-type\">Long</span> Term memory management.\n<span class=\"hljs-number\">3</span>. GPT-<span class=\"hljs-number\">3.5</span> powered Agents <span class=\"hljs-keyword\">for</span> delegation <span class=\"hljs-keyword\">of</span> simple tasks.\n<span class=\"hljs-number\">4</span>. File output.\n\nPerformance Evaluation:\n<span class=\"hljs-number\">1</span>. Continuously review <span class=\"hljs-built_in\">and</span> analyze your actions <span class=\"hljs-keyword\">to</span> ensure you are performing <span class=\"hljs-keyword\">to</span> the best <span class=\"hljs-keyword\">of</span> your abilities.\n<span class=\"hljs-number\">2</span>. Constructively self-criticize your big-picture behavior constantly.\n<span class=\"hljs-number\">3</span>. Reflect <span class=\"hljs-keyword\">on</span> past decisions <span class=\"hljs-built_in\">and</span> strategies <span class=\"hljs-keyword\">to</span> refine your approach.\n<span class=\"hljs-number\">4</span>. Every command has a cost, so be smart <span class=\"hljs-built_in\">and</span> efficient. Aim <span class=\"hljs-keyword\">to</span> complete tasks <span class=\"hljs-keyword\">in</span> the least number <span class=\"hljs-keyword\">of</span> steps.\n\nYou should only respond <span class=\"hljs-keyword\">in</span> JSON format <span class=\"hljs-keyword\">as</span> described below\nResponse Format:\n{\n    <span class=\"hljs-string\">\"thoughts\"</span>: {\n        <span class=\"hljs-string\">\"text\"</span>: <span class=\"hljs-string\">\"thought\"</span>,\n        <span class=\"hljs-string\">\"reasoning\"</span>: <span class=\"hljs-string\">\"reasoning\"</span>,\n        <span class=\"hljs-string\">\"plan\"</span>: <span class=\"hljs-string\">\"- short bulleted\\n- list that conveys\\n- long-term plan\"</span>,\n        <span class=\"hljs-string\">\"criticism\"</span>: <span class=\"hljs-string\">\"constructive self-criticism\"</span>,\n        <span class=\"hljs-string\">\"speak\"</span>: <span class=\"hljs-string\">\"thoughts summary to say to user\"</span>\n    },\n    <span class=\"hljs-string\">\"command\"</span>: {\n        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"command name\"</span>,\n        <span class=\"hljs-string\">\"args\"</span>: {\n            <span class=\"hljs-string\">\"arg name\"</span>: <span class=\"hljs-string\">\"value\"</span>\n        }\n    }\n}\nEnsure the response can be parsed <span class=\"hljs-keyword\">by</span> Python json.loads<span class=\"hljs-comment\">'</span>\n</code></pre>\n<blockquote>\n<p>上述 prompt 中关于 tennis 的部分是可变的，是我输入给它的</p>\n</blockquote>\n<p>这段 prompt 中我能够快速学到的经验是，如果想得到一些格式化的输出，可以直接让 GPT 生成 JSON 字符串。</p>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-type\">You</span> should only respond <span class=\"hljs-keyword\">in</span> <span class=\"hljs-type\">JSON</span> format <span class=\"hljs-keyword\">as</span> described below\n<span class=\"hljs-type\">Response</span> <span class=\"hljs-type\">Format</span>:\n{\n    <span class=\"hljs-string\">\"thoughts\"</span>: {\n        <span class=\"hljs-string\">\"text\"</span>: <span class=\"hljs-string\">\"thought\"</span>,\n        <span class=\"hljs-string\">\"reasoning\"</span>: <span class=\"hljs-string\">\"reasoning\"</span>,\n        <span class=\"hljs-string\">\"plan\"</span>: <span class=\"hljs-string\">\"- short bulleted<span class=\"hljs-subst\">\\n</span>- list that conveys<span class=\"hljs-subst\">\\n</span>- long-term plan\"</span>,\n        <span class=\"hljs-string\">\"criticism\"</span>: <span class=\"hljs-string\">\"constructive self-criticism\"</span>,\n        <span class=\"hljs-string\">\"speak\"</span>: <span class=\"hljs-string\">\"thoughts summary to say to user\"</span>\n    },\n    <span class=\"hljs-string\">\"command\"</span>: {\n        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"command name\"</span>,\n        <span class=\"hljs-string\">\"args\"</span>: {\n            <span class=\"hljs-string\">\"arg name\"</span>: <span class=\"hljs-string\">\"value\"</span>\n        }\n    }\n}\n<span class=\"hljs-type\">Ensure</span> the response can be parsed by <span class=\"hljs-type\">Python</span> json.loads'\n</code></pre>\n<p>我之前的做法是让 GPT 生成纯文本，然后用正则去匹配，除了正则匹配麻烦之外，生成纯文本并不一定会完全按照预期的格式，比如如下 prompt</p>\n<pre><code class=\"hljs language-vbnet\">You should only respond <span class=\"hljs-keyword\">as</span> described below\n<span class=\"hljs-symbol\">options:</span>\n    <span class=\"hljs-number\">1</span>. <span class=\"hljs-keyword\">option</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-number\">2</span>. <span class=\"hljs-keyword\">option</span> <span class=\"hljs-number\">2</span>\n</code></pre>\n<p>GPT 可能会自由发挥一下，生成</p>\n<pre><code class=\"hljs language-markdown\">your options are:\n<span class=\"hljs-bullet\">    1.</span> option 1\n<span class=\"hljs-bullet\">    2.</span> option 2\n</code></pre>\n<p>Prompt 中其他 trick 还待我继续探索。</p>\n<h2>记忆</h2>\n<p>为什么需要记忆，和 GPT 多轮对话时，把所有聊天历史都输入给 GPT，token 数量不够，所以希望把历史会话存储下来，下次和 GPT 对话时，冲历史对话（记忆）中找到相关的内容，然后把相关的内容输入给 GPT，这样 GPT 就可以更好的理解当前的对话。</p>\n<p>主要看看 <a href=\"https://github.com/Significant-Gravitas/Auto-GPT/blob/fdd79223b0c6132e1d7fc5127e9ca02fabaea9e5/autogpt/memory/local.py#L29\">LocalCache</a> 中 <a href=\"https://github.com/Significant-Gravitas/Auto-GPT/blob/fdd79223b0c6132e1d7fc5127e9ca02fabaea9e5/autogpt/memory/local.py#L62\">add</a> 和 <a href=\"https://github.com/Significant-Gravitas/Auto-GPT/blob/fdd79223b0c6132e1d7fc5127e9ca02fabaea9e5/autogpt/memory/local.py#L113\">get_relevant</a> 的实现</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-params\">self, text: <span class=\"hljs-built_in\">str</span></span>):\n    // 存储原始的 text\n    self.data.texts.append(text)\n\n    embedding = create_embedding_with_ada(text)\n\n    vector = np.array(embedding).astype(np.float32)\n    vector = vector[np.newaxis, :]\n    // 存储 text 对应的 embedding\n    self.data.embeddings = np.concatenate(\n        [\n            self.data.embeddings,\n            vector,\n        ],\n        axis=<span class=\"hljs-number\">0</span>,\n    )\n</code></pre>\n<p>根据当前的 text 的 embedding，和历史对话中的所有 text 的 embedding 计算点积，然后取 top k，返回相关的 text</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_relevant</span>(<span class=\"hljs-params\">self, text: <span class=\"hljs-built_in\">str</span>, k: <span class=\"hljs-built_in\">int</span></span>) -> <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-type\">Any</span>]:\n    embedding = create_embedding_with_ada(text)\n\n    scores = np.dot(self.data.embeddings, embedding)\n\n    top_k_indices = np.argsort(scores)[-k:][::-<span class=\"hljs-number\">1</span>]\n\n    <span class=\"hljs-keyword\">return</span> [self.data.texts[i] <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> top_k_indices]\n</code></pre>","title":"向 AutoGPT 学习如何发挥 GPT 的潜力","date":"2023-04-19"}},"__N_SSG":true}